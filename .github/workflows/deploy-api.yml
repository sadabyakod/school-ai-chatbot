name: Deploy .NET API to Azure App Service with SQL Database

on:
  push:
    branches: [ main ]
    paths: [ 'SchoolAiChatbotBackend/**', 'infra/**' ]
  workflow_dispatch:

jobs:
  # Infrastructure deployment
  deploy-infrastructure:
    runs-on: ubuntu-latest
    outputs:
      app-service-name: ${{ steps.deploy.outputs.appServiceName }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy Azure Infrastructure
      id: deploy
      run: |
        # Deploy using Azure CLI (more reliable)
        az deployment group create \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP_NAME }} \
          --template-file ./infra/azure-app-service-sql-simple.bicep \
          --parameters \
            appName=school-ai-chatbot \
            location="West US 2" \
            sqlAdminLogin=sqladmin \
            sqlAdminPassword="${{ secrets.SQL_ADMIN_PASSWORD }}" \
            jwtSecretKey="${{ secrets.JWT_SECRET_KEY }}" \
            openAiApiKey="${{ secrets.OPENAI_API_KEY }}" \
          --query "properties.outputs.appServiceName.value" \
          --output tsv > app_name.txt
        
        echo "appServiceName=$(cat app_name.txt)" >> $GITHUB_OUTPUT

  # Application deployment
  build-and-deploy:
    runs-on: ubuntu-latest
    needs: deploy-infrastructure
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'
    
    - name: Copy Production Program.cs
      run: cp SchoolAiChatbotBackend/Program.Production.cs SchoolAiChatbotBackend/Program.cs
    
    - name: Restore dependencies
      run: dotnet restore SchoolAiChatbotBackend/SchoolAiChatbotBackend.csproj
    
    - name: Build
      run: dotnet build SchoolAiChatbotBackend/SchoolAiChatbotBackend.csproj --no-restore --configuration Release
    
    - name: Publish
      run: dotnet publish SchoolAiChatbotBackend/SchoolAiChatbotBackend.csproj --no-build --configuration Release --output ./publish
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ needs.deploy-infrastructure.outputs.app-service-name }}
        package: ./publish